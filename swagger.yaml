---
openapi: 3.0.0
info:
  description: "Test"
  version: "1.0.5"
  title: "Leftover Killer"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "uycuhnt2467@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers: 
  - url: http://3.12.253.9:3000
  - url: http://3.12.253.9:3001

tags:
- name: "Recipe"
  description: "Search for recipe information"
- name: "Ingredient"
  description: "Search for ingredient information"
- name: "User"
  description: "Operations about user"
- name: "Pantry"
  description: "Maintain user pantry"
- name: "Favorite"
  description: "Maintain user favorite recipe"


paths:
  /recipe:
    get:
      tags:
      - "Recipe"
      summary: "Get all recipes"
      description: "This can be done by both the unlogged in and logged in user."
    
      responses:
        "200":
          description: "successful operation"
          content:
            text/html:
              schema:
                type: object
                properties:
                  result:
                    allOf:
                    - $ref:  "#/components/schemas/basic_success"
                    - type: object
                    properties:
                      recipes:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/basic_ingredient"
                          type: object
  
  /recipe/{recipe_id}:
    get:
      tags:
      - "Recipe" 
      summary: "Get one recipe detail"
      
      parameters:
        - in: path
          required: true
          name: recipe_id
          schema:
            type: integer
          
      responses:
        "200":
          description: "successful operation"
          content:
            text/html:
              schema:
                type: object
                properties:
                  result:          
                    allOf:
                      - $ref: "#/components/schemas/basic_recipe"
                      - $ref:  "#/components/schemas/basic_success"
                      - type: object
                      - properties:
                          instruction:
                            type: string
                          ingredients:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/basic_ingredient"
  /ingredient:
    get:
      tags:
      - "Ingredient" 
      summary: "Get all ingredient info"
      
      responses:
        "200":
          description: "successful operation"
          content:
            text/html:
              schema:
                type: object
                properties:
                  result:          
                    allOf:
                      - $ref:  "#/components/schemas/basic_success"
                    type: object
                    properties:
                      ingredients:
                        type: array
                        items:
                          allOf:
                            - $ref:  "#/components/schemas/basic_success"
                            - $ref: "#/components/schemas/basic_ingredient"
                          
                            
  /ingredient/{ingredient_id}:
    get:
      tags:
        - "Ingredient" 
      summary: "Get one ingredient detail"
      
      parameters:
        - in: path
          required: true
          name: ingredient_id
          schema:
            type: integer
          
      responses:
        "200":
          description: "successful operation"
          content:
            text/html:
              schema:
                type: object
                properties:
                  result:          
                    allOf:
                      - $ref: "#/components/schemas/basic_success"
                      - $ref: "#/components/schemas/basic_ingredient"
                      - type: object
                      - properties:
                          recipes:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/basic_recipe"

  # /register:
  #   post:
  #     tags:
  #       - "User" 
  #     summary: "Get one ingredient detail"

  #     requestBody:
  #       required: true
  #       content:
  #         text/html:
  #           schema: 
             
  #             type: object
  #             properties:
  #               data:
  #                 type: object
  #                 properties:
  #                   username:
  #                     type: string
  #                   email:
  #                     type: string
  #                   hash_password:
  #                     type:
  #                       string
  #                   nickname:
  #                     type: string
  #     responses:
  #       "200":
  #         description: "successful operation"
  #         content:
  #           text/html:
            
              

  # /member/login:
  #   post:
  # /member/update:
  #   put:


  # /serach:
  #   get:

  # /pantry
  #   get:
  #   post:
  #   delete



  # /favorite:
  #   get:
  #   post:
  #   delete:
components:
  schemas:
    basic_success:
      type: object
      properties:
        success:
          type: boolean
    basic_recipe:
      type: object
      properties:
        recipe_id:
          type: integer
        recipe_name:
          type: string
        image_url:
          type: string
      required:
        - recipe_id
        - recipe_name
        - image_url
    
    basic_ingredient:
      type: object
      properties:
        ingredient_id:
          type: integer
        ingredient_name:
          type: string
        image_url:
          type: string
      required:
        - ingredient_id
        - ingredient_name
        - image_url
      
            

        
        
      


    
