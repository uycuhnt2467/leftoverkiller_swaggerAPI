---
openapi: 3.0.0
info:
  description: "Test"
  version: "1.0.5"
  title: "Leftover Killer"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "uycuhnt2467@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers: 
  - url: http://3.12.253.9:3000

tags:
- name: "Recipe"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "Ingredient"
  description: "Access to Petstore orders"
- name: "Pantry"
  description: "Access to Petstore orders"
- name: "Favorite"
  description: "Access to Petstore orders"
- name: "User"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"

paths:
  /recipe:
    get:
      tags:
      - "recipe"
      summary: "Get all recipes"
      description: "This can be done by both the unlogged in and logged in user."
    
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    
                    properties:
                      success:
                        type: boolean
                      recipes:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/basic_ingredient"
                          type: object

  /recipe2:
    get:
      tags:
      - "recipe" 
      summary: "Get one recipe detail"
      description: "lala"
      
      parameters:
        - in: path
          required: true
          name: recipe_id
          schema:
            type: integer
          
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:          
                    allOf:
                      - $ref: "#/components/schemas/basic_recipe"
                      - type: object
                      - properties:
                          success:
                            type: boolean
                          instructions:
                            type: string
                          ingredients:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/basic_ingredient"


components:
  schemas:
    basic_recipe:
      type: object
      properties:
        recipe_id:
          type: integer
        recipe_name:
          type: string
        image_url:
          type: string
      required:
        - recipe_id
        - recipe_name
        - image_url
    
    basic_ingredient:
      type: object
      properties:
        ingredient_id:
          type: integer
        ingredient_name:
          type: string
        image_url:
          type: string
      required:
        - ingredient_id
        - ingredient_name
        - image_url
      
    
    one_recipe:
      allOf:
        - $ref: "#/components/schemas/basic_recipe" 
        - type: object
          properties:
            instructions: 
              type: string
            

        
        
      


    
